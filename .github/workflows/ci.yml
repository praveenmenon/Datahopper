name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      working-directory: backend
      run: go mod download

    - name: Run tests
      working-directory: backend
      run: go test -v ./...

    - name: Run linting
      working-directory: backend
      run: |
        go install golang.org/x/lint/golint@latest
        golint ./...

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Run frontend tests
      working-directory: frontend
      run: npm test -- --watchAll=false

    - name: Build frontend
      working-directory: frontend
      run: npm run build

  build:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build backend binary
      working-directory: backend
      run: |
        go build -o dist/datahopper ./cmd/api
        tar -czf datahopper-linux-amd64.tar.gz -C dist datahopper

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Build frontend
      working-directory: frontend
      run: |
        npm ci
        npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: datahopper-build
        path: |
          datahopper-linux-amd64.tar.gz
          frontend/dist/
