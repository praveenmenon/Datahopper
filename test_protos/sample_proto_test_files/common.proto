syntax = "proto3";

package common;

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";

option go_package="golang.frontdoorhome.com/software/protos/go/common";
option csharp_namespace = "FTDR.Protos.Common";

extend google.protobuf.FieldOptions {
    // do_not_log tags fields to be redacted 
    bool do_not_log                       = 50100;
    // internal tags fields to be sanitized 
    bool internal                         = 50200;
}

// Tenants supported by the estimate service
enum Tenant {
    TENANT_UNDEFINED = 0;
    TEST = 1;
    AHS = 2; // used when Tenant is AHS
    CD = 3;
    HSA = 4; // used when Tenant is HSA
    OG = 5;
    LM = 6;
    FRONTDOOR = 7 [deprecated = true]; // Deprecated - use FTDR instead
    AHSPC = 8;
    HSAPC = 9;
    FTDR = 10; // used when Tenant is Frontdoor
    HBW210 = 11; // used when Tenant is 2-10
}

// Alert in DispatchList
enum Alert {
   ALERTS_UNDEFINED = 0; // default value when Alerts is not present in response
   ALERTS_UNSCHEDULED = 1;
   ALERTS_NEED_STATUS_UPDATE = 2;
   ALERTS_OPEN_LONGER_THAN_AVERAGE = 3;
   ALERTS_SCHEDULE_NEXT_APPOINTMENT = 4 [deprecated = true]; // Deprecated - Combined to ALERTS_AUTHO_STATUS_UPDATED
   ALERTS_RESUBMIT_REQUEST = 5 [deprecated = true]; // Deprecated - Combined to ALERTS_AUTHO_STATUS_UPDATED
   ALERTS_TODAYS_APPOINTMENT = 6;
   ALERTS_AUTHO_STATUS_UPDATED = 7;
}

// Status of the operation sent in every response
enum Status {
	STATUS_UNDEFINED = 0; // default value when status is not present in response
	SUCCESS = 1;
	FAIL = 2;
}

/*
	UserRole is enum to specify user's role who is calling APIs.
*/
enum UserRole {
    // USER_ROLE_UNDEFINED is default value passed in request when UserRole is not present in request explicitly,
    // If request is made with default UserRole then the API should throw an error, it must be part of Validation logic
    USER_ROLE_UNDEFINED = 0;
    CONTRACTOR = 1;
    AGENT = 2;
    ADMIN = 3;
    TECHNICIAN = 4;
    PARTNER = 5; // This role will be used for API calls originating from a microservice to another microservice
    CUSTOMER = 6;
    DEVELOPER = 7;
    EXTERNAL_PARTNER = 8; // This role will be used for API calls originating from services outside of Frontdoor. Eg. DispatchMe
}

enum Application {
  Application_UNKNOWN = 0;
  Application_CNTRTRPRTL = 1;
  Application_MYACCOUNT = 2;
  Application_CSC = 3;
  Application_MOBILEAPP = 4;
  Application_ESTREVIEW = 5;
  Application_DISTHRDPRT = 6;
  Application_DPCONN = 7;
  Application_DISPATCHME = 8;
  Application_DISPMEPRTL = 9;
  Application_SC         = 10;
  Application_SC_RENEWALS = 11; // Sales Central Renewals
  Application_MA_RENEWALS = 12; // My Account Renewals
  Application_CONTRACT_MS = 13; // Contract MS
  Application_RENEWAL_ORCHESTRATOR = 14;
  Application_WEBSERVICE = 15;
  Application_CL = 16;
  Application_SC_DTC = 17;
  Application_SC_RE = 18;
}


message HealthCheckDetail {
    string componentID = 1;
    string type = 2;
    double observedValue = 3;
    string observedUnit = 4;
    string status = 5;
    google.protobuf.Timestamp time = 6;
    string output = 7;
}

message NamedHealthCheckDetail {
    string name = 1;
    repeated HealthCheckDetail details = 2;
}

message HealthCheck {
    string status = 1;
    string version = 2;
    string releaseID = 3;
    repeated string notes = 4;
    string output = 5;
    repeated NamedHealthCheckDetail details = 6;
}

message HealthCheckResponse {
    HealthCheck health = 1;
}

message Timeslot {
    google.protobuf.Timestamp start = 1;
    google.protobuf.Timestamp end = 2;
}

message ErrorResponse {
    repeated Error errors = 1;
}

message Error {
	string message = 1;
	string code = 2;
}

// Ref: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto
// This could be removed in future if we are able to import money.proto, currently this proto is exactly the same
// Represents an amount of money with its currency type.
message Money {
  // The 3-letter currency code defined in ISO 4217.
  string currency_code = 1;

  // The whole units of the amount.
  // For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
  int64 units = 2;

  // Number of nano (10^-9) units of the amount.
  // The value must be between -999,999,999 and +999,999,999 inclusive.
  // If `units` is positive, `nanos` must be positive or zero.
  // If `units` is zero, `nanos` can be positive, zero, or negative.
  // If `units` is negative, `nanos` must be negative or zero.
  // For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
  int32 nanos = 3;
}

// Ref: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto
// Represents a whole or partial calendar date, such as a birthday. The time of
// day and time zone are either specified elsewhere or are insignificant. The
// date is relative to the Gregorian Calendar. This can represent one of the
// following:
//
// * A full date, with non-zero year, month, and day values
// * A month and day value, with a zero year, such as an anniversary
// * A year on its own, with zero month and day values
// * A year and month value, with a zero day, such as a credit card expiration
// date
//
// Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and `google.protobuf.Timestamp`.
message Date {
    // Year of the date. Must be from 1 to 9999, or 0 to specify a date without
    // a year.
    int32 year = 1;

    // Month of a year. Must be from 1 to 12, or 0 to specify a year without a
    // month and day.
    int32 month = 2;

    // Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
    // to specify a year by itself or a year and month where the day isn't
    // significant.
    int32 day = 3;
  }

// represents the location as a combination of latitude and longitude
message GeoLocation {
    float latitude = 1 ;
    float longitude = 2 ;
}

// Represents region of request.
enum Locale {
    EN = 0;
    ES = 1;
}

// Represents an integer range request.
message Range_U32 {
    uint32 min = 1;
    uint32 max = 2;
}

message ApplicationSource {
    string name = 1;            // Name of application
    string version = 2;         // Version of application
    string authorVersion = 3;   // Author version 
}

// Represents paginated results
message Pagination {
  int32 currentPage = 1; // Current page number
  int32 itemsPerPage = 2; // Number of records in a page
  int32 totalPages = 3; // Total number of pages in the paginated list
  int32 totalRecords = 4; // Total number of records across all pages
}

message PaginationRequest {
    uint32 currentPage = 1; // Current page number
    uint32 itemsPerPage = 2; // Number of records in a page
}

// US State codes
enum USStateAlphaCode {
  UnknownState = 0;

  AL = 1;
  AK = 2;
  AZ = 3;
  AR = 4;
  CA = 5;
  CO = 6;
  CT = 7;

  DE = 11;
  DC = 12;
  FL = 13;

  GA = 21;
  HI = 22;
  ID = 23;
  IL = 24;
  IN = 25;
  IA = 26;

  KS = 31;
  KY = 32;
  LA = 33;

  ME = 41;
  MD = 42;
  MA = 43;
  MI = 44;
  MN = 45;
  MS = 46;
  MO = 47;
  MT = 48;

  NE = 51;
  NV = 52;
  NH = 53;
  NJ = 54;
  NM = 55;
  NY = 56;
  NC = 57;
  ND = 58;

  OH = 61;
  OK = 62;
  OR = 63;
  PA = 64;
  RI = 65;
  SC = 66;
  SD = 67;

  TN = 71;
  TX = 72;
  UT = 73;
  VT = 74;
  VA = 75;
  WA = 76;
  WV = 77;
  WI = 78;
  WY = 79;
}

// For logging changes made in a data-centric application by a user.
// The fields createdOn and createdBy are for logging the data about the user entity who made this change.
// While the repeated AuditTrailEntryDetail message is for storing the 'trail' of actual changes made and the type of it [Type can be system specific].
message AuditTrailEntry {
    google.protobuf.Timestamp createdOn = 1;
    string createdBy = 2;
    repeated AuditTrailEntryDetail details = 3;
    message AuditTrailEntryDetail {
        string type = 1;
        map<string, string> old = 2;
        map<string, string> new = 3;
    }
}

